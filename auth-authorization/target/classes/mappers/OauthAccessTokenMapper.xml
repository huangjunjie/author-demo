<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.stone.demo.author.authorization.dao.OauthAccessTokenMapper" >
  <resultMap id="BaseResultMap" type="com.stone.demo.author.authorization.bean.po.OauthAccessToken" >
    <id column="authentication_id" property="authenticationId" jdbcType="VARCHAR" />
    <result column="token_id" property="tokenId" jdbcType="VARCHAR" />
    <result column="token" property="token" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="client_id" property="clientId" jdbcType="VARCHAR" />
    <result column="authentication" property="authentication" jdbcType="VARCHAR" />
    <result column="refresh_token" property="refreshToken" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    authentication_id, token_id, token, user_name, client_id, authentication, refresh_token
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from oauth_access_token
    where authentication_id = #{authenticationId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from oauth_access_token
    where authentication_id = #{authenticationId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.stone.demo.author.authorization.bean.po.OauthAccessToken" >
    insert into oauth_access_token (authentication_id, token_id, token, 
      user_name, client_id, authentication, 
      refresh_token)
    values (#{authenticationId,jdbcType=VARCHAR}, #{tokenId,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{clientId,jdbcType=VARCHAR}, #{authentication,jdbcType=VARCHAR}, 
      #{refreshToken,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.stone.demo.author.authorization.bean.po.OauthAccessToken" >
    insert into oauth_access_token
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="authenticationId != null" >
        authentication_id,
      </if>
      <if test="tokenId != null" >
        token_id,
      </if>
      <if test="token != null" >
        token,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="clientId != null" >
        client_id,
      </if>
      <if test="authentication != null" >
        authentication,
      </if>
      <if test="refreshToken != null" >
        refresh_token,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="authenticationId != null" >
        #{authenticationId,jdbcType=VARCHAR},
      </if>
      <if test="tokenId != null" >
        #{tokenId,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="clientId != null" >
        #{clientId,jdbcType=VARCHAR},
      </if>
      <if test="authentication != null" >
        #{authentication,jdbcType=VARCHAR},
      </if>
      <if test="refreshToken != null" >
        #{refreshToken,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.stone.demo.author.authorization.bean.po.OauthAccessToken" >
    update oauth_access_token
    <set >
      <if test="tokenId != null" >
        token_id = #{tokenId,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="clientId != null" >
        client_id = #{clientId,jdbcType=VARCHAR},
      </if>
      <if test="authentication != null" >
        authentication = #{authentication,jdbcType=VARCHAR},
      </if>
      <if test="refreshToken != null" >
        refresh_token = #{refreshToken,jdbcType=VARCHAR},
      </if>
    </set>
    where authentication_id = #{authenticationId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.stone.demo.author.authorization.bean.po.OauthAccessToken" >
    update oauth_access_token
    set token_id = #{tokenId,jdbcType=VARCHAR},
      token = #{token,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      client_id = #{clientId,jdbcType=VARCHAR},
      authentication = #{authentication,jdbcType=VARCHAR},
      refresh_token = #{refreshToken,jdbcType=VARCHAR}
    where authentication_id = #{authenticationId,jdbcType=VARCHAR}
  </update>
</mapper>